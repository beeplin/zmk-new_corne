/* spellchecker:disable */
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 800  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20   // 10

#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

#define ug rgb_ug 

&lt {
    flavor = "hold-preferred";
    // tapping-term-ms = <100>;
};

&mt {
    // tapping-term-ms = <100>;
};

/ {
    // conditional_layers {
    //     compatible = "zmk,conditional-layers";
    //     tri_layer {
    //         if-layers = <1 2>;
    //         then-layer = <3>;
    //     };
    // };

    macros {
        win_sleep: win_sleep {
            wait-ms = <50>;
            tap-ms = <5>;
            compatible = "zmk,behavior-macro";
            label = "WIN_SLEEP";
            #binding-cells = <0>;
            bindings = <&kp LG(X) &kp U &kp S>;
        };
    };

    behaviors {
        lclk_rclk: lclk_rclk {
            compatible = "zmk,behavior-tap-dance";
            label = "LCLK_RCLK";
            #binding-cells = <0>;
            bindings = <&mkp LCLK>, <&mkp RCLK>;
        };

        mmv {
            acceleration-exponent = <0>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0      
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&ug RGB_BRI>, <&ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";
        layer0 {
            display-name = "QWERTY";
            bindings = <
&kp TAB          &kp Q          &kp W          &kp E          &kp R          &kp T            &kp UP           &kp Y          &kp U          &kp I          &kp O          &kp P          &kp EQUAL
&mt LSHFT ESC    &kp A          &kp S          &kp D          &kp F          &kp G            &kp DOWN         &kp H          &kp J          &kp K          &kp L          &kp SEMI       &mt RSHFT SQT
&kp GRAVE        &kp Z          &kp X          &kp C          &kp V          &kp B            &kp LEFT         &kp N          &kp M          &kp COMMA      &kp DOT        &kp FSLH       &kp BSLH
&kp C_MUTE                                     &kp LALT       &lt 1 SPACE    &mt LCTRL ENTER  &kp RIGHT        &kp MINUS      &lt 2 LBKT     &kp RBKT                                     &kp LGUI >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
        layer1 {
            display-name = "SUPER"; 
            bindings = <
&kp LA(F4)       &kp N1         &kp N2         &kp N3         &kp N4         &kp N5           &msc SCRL_UP     &kp N6         &kp N7         &kp N8         &kp N9         &kp N0         &caps_word
&mt LSHFT HOME   &kp BSPC       &kp UP         &kp DEL        &kp PG_UP      &kp END          &msc SCRL_DOWN   &kp F7         &kp F8         &kp F9         &kp F10        &kp F11        &mt RSHFT F12 
&kp PRINTSCREEN  &kp LEFT       &kp DOWN       &kp RIGHT      &kp PG_DN      &kp INS          &msc SCRL_LEFT   &kp F1         &kp F2         &kp F3         &kp F4         &kp F5         &kp F6
&trans                                         &trans         &trans         &trans           &msc SCRL_RIGHT  &kp RCTRL      &kp LPAR       &kp RALT                                     &trans >;
            sensor-bindings = <&scroll_encoder>;
        };
        layer2 {
            display-name = "EXTRA"; 
            bindings = <
&bt BT_CLR       &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &mmv MOVE_UP     &kp FSLH       &kp N7         &kp N8         &kp N9         &kp MINUS      &win_sleep
&out OUT_TOG     &ug RGB_HUI    &ug RGB_SAI    &ug RGB_BRI    &ug RGB_SPI    &ug RGB_EFF      &mmv MOVE_DOWN   &kp ASTRK      &kp N4         &kp N5         &kp N6         &kp PLUS       &kp ENTER
&ug RGB_TOG      &ug RGB_HUD    &ug RGB_SAD    &ug RGB_BRD    &ug RGB_SPD    &ug RGB_EFR      &mmv MOVE_LEFT   &lclk_rclk     &kp N1         &kp N2         &kp N3         &kp DOT        &kp K_APP
&bootloader                                    &kp LA(ENTER)  &kp RPAR       &kp LC(ENTER)    &mmv MOVE_RIGHT  &trans         &trans         &kp N0                                       &bootloader>;
            sensor-bindings = <&rgb_encoder>;
        };
    };  
};
