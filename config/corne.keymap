/* spellchecker:disable */
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

&lt {
    flavor = "hold-preferred";
};

/ {
    behaviors {

    
        lclk_rclk: lclk_rclk {
            compatible = "zmk,behavior-tap-dance";
            label = "LCLK_RCLK";
            #binding-cells = <0>;
            bindings = <&mkp LCLK>, <&mkp RCLK>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0      
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };


    keymap {
        compatible = "zmk,keymap";
        layer0 {
            display-name = "QWERTY"; bindings = <
&kp TAB        &kp Q  &kp W       &kp E     &kp R        &kp T        &kp UP     &kp Y     &kp U        &kp I      &kp O    &kp P     &kp BSPC
&mt LCTRL ESC  &kp A  &kp S       &kp D     &kp F        &kp G        &kp DOWN   &kp H     &kp J        &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT      &kp Z  &kp X       &kp C     &kp V        &kp B        &kp LEFT   &kp N     &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                      &kp C_MUTE  &kp LALT  &lt 1 SPACE  &lt 3 SPACE  &kp RIGHT  &kp LGUI  &lt 2 SPACE  &kp RALT   &none >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
        layer1 {
            display-name = "NUMSYM"; bindings = <
&kp GRAVE        &kp N1    &kp N2        &kp N3     &kp N4     &kp N5     &kp PG_UP  &kp N6    &kp N7        &kp N8            &kp N9        &kp N0    &kp BSLH
&mt LCTRL BSPC   &kp LEFT  &kp UP  &kp DOWN   &kp RIGHT  &kp DEL    &kp PG_DN  &kp LBKT  &kp NUMBER_4  &kp N5            &kp NUMBER_6  &kp PLUS  &mt RCTRL RBKT
&mt LSHFT ENTER  &kp HOME  &kp PG_UP     &kp PG_DN  &kp END    &kp INS    &kp HOME   &kp LBRC  &kp NUMBER_1  &kp NUMBER_2      &kp NUMBER_3  &kp DOT   &mt RSHFT RBRC
                           &trans        &trans     &trans     &trans     &kp END    &trans    &kp EQUAL     &mt RIGHT_ALT N0 &trans >;
            sensor-bindings = <&scroll_encoder>;
        };
        layer2 {
            display-name = "FUNC"; bindings = <
&kp TILDE              &kp EXCL   &kp AT     &kp POUND  &kp DLLR   &kp PRCNT    &trans  &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &kp PIPE
&mt LCTRL LA(F4)       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC   &kp DQT      &trans  &kp F1     &kp F2    &kp F3     &kp F4    &kp F5    &mt RCTRL F6
&mt LSHFT PRINTSCREEN  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &kp SQT      &trans  &kp F7     &kp F8    &kp F9     &kp F10   &kp F11   &mt LSHFT F12
                                  &trans     &trans     &kp EQUAL  &trans       &trans  &trans     &trans    &trans &trans >;
            sensor-bindings = <&scroll_encoder>;
        };
        layer3 {
            display-name = "CONFIG"; bindings = <
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &mmv MOVE_UP     &bl BL_TOG  &bl BL_CYCLE  &ext_power EP_TOG  &bt BT_CLR_ALL  &out OUT_TOG  &soft_off
&rgb_ug RGB_ON   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF    &mmv MOVE_DOWN   &bl BL_ON   &bl BL_INC    &ext_power EP_ON   &bt BT_NXT      &out OUT_BLE  &sys_reset
&rgb_ug RGB_OFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR    &mmv MOVE_LEFT   &bl BL_OFF  &bl BL_DEC    &ext_power EP_OFF  &bt BT_PRV      &out OUT_USB  &bootloader
                                  &bootloader      &trans           &trans           &trans             &mmv MOVE_RIGHT  &lclk_rclk  &trans        &trans &mkp LCLK >;
            sensor-bindings = <&rgb_encoder>;
        };
    };
};
