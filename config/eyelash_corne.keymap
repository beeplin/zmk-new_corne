/* spellchecker:disable */
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// #define ZMK_MOUSE_DEFAULT_MOVE_VAL 800  // 600
// #define ZMK_MOUSE_DEFAULT_SCRL_VAL 20   // 10

&lt {
    flavor = "hold-preferred";
};


&sk {
    release-after-ms = <4000>;
    quick-release;
    lazy;
};


/ {
    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };
    scroll_encoder: scroll_encoder  {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };
    behaviors {
        // mmv {
        //     acceleration-exponent = <0>;      // 1
        //     time-to-max-speed-ms = <900>;    // 40
        //     delay-ms = <0>;                   // 0
        // };
        // msc {
        //     acceleration-exponent = <1>;      // 0      
        //     time-to-max-speed-ms = <400>;      // 500
        //     delay-ms = <0>;                   // 10
        // };
        // lclk_rclk: lclk_rclk    { bindings = <&mkp LCLK>, <&mkp RCLK>; compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; };
        lsk: layer_sticky_key   { bindings = <&mo>, <&sk>;        compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; };
        lsl: layer_sticky_layer { bindings = <&mo>, <&sl>;        compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; };
        lmk: layer_mouse_key    { bindings = <&mo>, <&mkp>;       compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; };
        lcw: layer_caps_word    { bindings = <&mo>, <&caps_word>; compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; };
        hsk: hold_sticky_key    { bindings = <&kp>, <&sk>;        compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; };
        hsl: hold_sticky_layer  { bindings = <&kp>, <&sl>;        compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; };
        hmk: hold_mouse_key     { bindings = <&kp>, <&mkp>;       compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; };
        hcw: hold_caps_word     { bindings = <&kp>, <&caps_word>; compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; };
    };
    macros {
        win_sleep: win_sleep { wait-ms = <50>; tap-ms = <5>; compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LG(X) &kp U &kp S>; };
    };
    keymap {
        compatible = "zmk,keymap";
        layer0 {
            display-name = "QWERTY";
            bindings = <
&kp TAB          &kp Q            &kp W            &kp E            &kp R            &kp T                             &kp UP                            &kp Y            &kp U            &kp I            &kp O            &kp P            &kp BSLH
&hsl LCTRL 3     &kp A            &kp S            &kp D            &kp F            &kp G            &kp LEFT         &kp ENTER        &kp RIGHT        &kp H            &kp J            &kp K            &kp L            &kp SEMI         &kp SQT
&kp LSHFT        &kp Z            &kp X            &kp C            &kp V            &kp B            &kp C_MUTE       &kp DOWN                          &kp N            &kp M            &kp COMMA        &kp DOT          &kp FSLH         &hcw RSHFT CAPS
                                                   &hsk LALT LGUI   &lt 1 ESC        &kp SPACE                                                           &kp LPAR         &lsk 2 LSHFT     &kp LBRC >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        layer1 {
            display-name = "NAVNUM";
            bindings = <
&hsk LGUI LGUI   &msc SCRL_LEFT   &kp BSPC         &kp UP           &kp DEL          &msc SCRL_RIGHT                   &msc SCRL_UP                      &kp INS          &kp N7           &kp N8           &kp N9           &kp C_PLAY_PAUSE &hsk RGUI RGUI
&hsk LCTRL LCTRL &kp ENTER        &kp LEFT         &kp DOWN         &kp RIGHT        &kp PG_UP        &msc SCRL_LEFT   &mkp LCLK        &msc SCRL_RIGHT  &kp HOME         &kp N4           &kp N5           &kp N6           &kp C_PREV       &hsk RCTRL RCTRL
&hsk LSHFT LSHFT &kp LC(Z)        &kp LC(X)        &kp LC(C)        &kp LC(V)        &kp PG_DN        &mkp RCLK        &msc SCRL_DOWN                    &kp END          &kp N1           &kp N2           &kp N3           &kp C_NEXT       &hsk RSHFT RSHFT
                                                   &none            &none            &none                                                               &kp K_APP        &kp N0           &hsk LALT LGUI >;
            sensor-bindings = <&scroll_encoder>;
        };
        layer2 {
            display-name = "SYMBOL";
            bindings = <
&hsk LGUI LGUI   &kp EXCL         &kp AT           &kp POUND        &kp DLLR         &kp PRCNT                         &rgb_ug RGB_BRI                   &kp CARET        &kp AMPS         &kp ASTRK        &kp PIPE         &kp DQT          &hsk RGUI RGUI
&hsk LCTRL LCTRL &kp GRAVE        &kp LBRC         &kp LBKT         &kp LPAR         &none            &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &none            &kp MINUS        &kp PLUS         &kp EQUAL        &kp COLON        &hsk RCTRL RCTRL
&hsk LSHFT LSHFT &kp TILDE        &kp RBRC         &kp RBKT         &kp RPAR         &none            &kp C_PLAY_PAUSE &rgb_ug RGB_BRD                   &none            &kp UNDER        &kp LT           &kp GT           &kp QMARK        &hsk RSHFT RSHFT
                                                   &hsk LALT LGUI   &mo 4            &kp PRINTSCREEN                                                     &none            &none            &none >;
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV>;
        };
        layer3 {
            display-name = "FUNMSE";
            bindings = <
&hsk LGUI LGUI   &kp F12         &kp F9           &kp F8            &kp F7           &studio_unlock                    &mmv MOVE_UP                      &none            &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_UP     &mmv MOVE_RIGHT  &hsk RGUI RGUI
&hsk LCTRL LCTRL &kp F11         &kp F6           &kp F5            &kp F4           &none            &mmv MOVE_LEFT   &mkp LCLK        &mmv MOVE_RIGHT  &none            &mkp MB1         &mkp MB2         &mkp MB4         &mkp MB5         &hsk RCTRL RCTRL
&hsk LSHFT LSHFT &kp F10         &kp F3           &kp F2            &kp F1           &win_sleep       &kp RCLK         &mmv MOVE_DOWN                    &none            &msc SCRL_LEFT   &msc SCRL_DOWN   &msc SCRL_UP     &msc SCRL_RIGHT  &hsk RSHFT RSHFT
                                                  &kp LGUI          &none            &none                                                               &none            &mkp MB3         &kp RGUI >;
            sensor-bindings = <&scroll_encoder>;
        };
        layer4 {
            display-name = "CONFIG";
            bindings = <
&none            &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                      &rgb_ug RGB_SAI                   &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR  &none
&none            &bt BT_DISC 0    &bt BT_DISC 1    &bt BT_DISC 2    &bt BT_DISC 3    &bt BT_DISC 4    &rgb_ug RGB_HUD  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &none
&none            &bt BT_CLR_ALL   &none            &none            &bt BT_CLR       &out OUT_TOG     &out OUT_TOG     &rgb_ug RGB_SAD                   &rgb_ug RGB_TOG  &none            &none            &none            &none            &none
                                                   &bootloader      &none            &none                                                               &bootloader      &none            &none >;
            sensor-bindings = <&scroll_encoder>;
        };
    };  
};
